#compdef git-tag git-archive
local curcontext="$curcontext" state state_descr line
typeset -A opt_args
local opts archive
opts=(
'(1 -)'{'-h','-H'}'[help]'
'(-a)-s[Sign]'
'(-s)-a[Do not sign]'
'-f[force even if tag does not start with v]'
'(-T)-t[Set GPG_TTY to current tty]'
'(-t)-T[Do not modify GPG_TTY]'
)
case $service in
(*tag*)
	archive=false
	opts+=(
'-d[Delete tag locally]'
'(-d -r)-D[Delete tag locally and remotely]'
'-r[Remove tag remotely]'
);;
(*)
	archive=:
	opts+=(
'-c[argument is a commit or "master", not a tag]'
'-z[keep zip file archive]'
'-X[do not keep tar.gz archive]'
'-x[Create .xpi file \(usually combined with -aX\)]'
'(-P)-p[TZ=\:/usr/share/zoneinfo/US/Pacific-New]'
'(-p)-P+[Set TZ to specficied value for zip]:timezone:_time_zone'
);;
esac
_arguments -C -s -S -A '-*' : $opts \
'1::tag:->tag'
local ret=$?
case $state in
(tag)
	if $archive && [[ -n ${opt_args[-c]++} ]]
	then	words=(git rev-parse '')
		CURRENT=3
		state=
		state_descr=
		line=
		opt_args=()
		_normal && ret=0
		return ret
	fi
	local tags
	tags=(${(f)"$(_call_program tagrefs git tag -l 2>/dev/null)"})
	(( $? )) && {
		_message 'not a git repository'
		return ret
	}
	_wanted tags expl tag compadd -M 'r:|/=**' "$@" -a - tags && ret=0;;
esac
return ret
