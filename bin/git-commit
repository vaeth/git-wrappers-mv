#!/usr/bin/env sh
# SPDX-License-Identifier: CC-BY-4.0
set -u
LC_ALL=C
export LC_ALL
umask 022

index=false
commit=false
status=false
opts=hH
case $0 in
*status)
	status=:;;
*commit)
	opts=tT$opts
	commit=:;;
*)
	index=:;;
esac

Echo() {
	printf '%s\n' "$*"
}

Die() {
	s=$?
	Echo "${0##*/}: fatal: $1" >&2
	exit ${2:-$s}
}

ExecDie() {
	Echo "# $*"
	"$@" || Die "$* returned $?"
}

Usage() {
	if $commit
	then	Echo "Usage: ${0##*/} [options] [-- [git commit options]]
The current directory with all its content is commited.
This is roughly equivalent to
	git add --all .
	git commit -a [git commit options]
but possibly also exports GPG_TTY.

Options:
-t Set GPG_TTY to current tty (default)
-T Do not modify GPG_TTY
-h Show this help

If you want to sign, use git commit option -S or
	git config commit.gpgsign true

Another frequently used git commit option: --amend"
	else	if $status
		then	Echo "Usage: ${0##*/} [options] [-- [git status options]]
This is like git status, but in advance regenerates the index to the status
of the working directory."
		else	Echo "Usage: ${0##*/} [-h] [-- [git update-index options]]
This simlar to git update-index --refresh -q --unmerged but in advance
regenerates the index to the status of the working directory."
		fi
		Echo 'Options:
-h Show this help'
	fi
	exit ${1:-1}
}

gettty=$commit
OPTIND=1
while getopts "$opts" opt
do	case $opt in
	t)	gettty=:;;
	T)	gettty=false;;
	'?')	exit 1;;
	*)	Usage 0;;
	esac
done
shift $(( $OPTIND - 1 ))

if $gettty
then	GPG_TTY=`tty` && [ -n "${GPG_TTY:++}" ] && export GPG_TTY \
		|| unset GPG_TTY
fi

dir=`git rev-parse --show-toplevel 2>/dev/null` && [ -n "$dir" ] \
	&& test -d "$dir/.git" || Die 'not in a git repository'

cd "$dir" >/dev/null 2>&1 || Die "cannot cd to $dir"

ExecDie rm -f -- .git/index
ExecDie git add --all .

if $status
then	ExecDie git status ${1+"$@"}
	exit
elif $index
then	ExecDie git update-index --refresh -q --unmerged ${1+"$@"}
	exit
fi

ExecDie git commit -a ${1+"$@"}
Echo 'Next steps:
	git-gc
	[git-tag && git-gc]
	git-push'
